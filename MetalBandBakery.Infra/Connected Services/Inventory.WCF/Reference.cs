//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MetalBandBakery.Infra.Inventory.WCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Inventory.WCF.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckStock", ReplyAction="http://tempuri.org/IService/CheckStockResponse")]
        bool CheckStock(char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckStock", ReplyAction="http://tempuri.org/IService/CheckStockResponse")]
        System.Threading.Tasks.Task<bool> CheckStockAsync(char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveStock", ReplyAction="http://tempuri.org/IService/RemoveStockResponse")]
        bool RemoveStock(char product, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveStock", ReplyAction="http://tempuri.org/IService/RemoveStockResponse")]
        System.Threading.Tasks.Task<bool> RemoveStockAsync(char product, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ManyStock", ReplyAction="http://tempuri.org/IService/ManyStockResponse")]
        int ManyStock(char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ManyStock", ReplyAction="http://tempuri.org/IService/ManyStockResponse")]
        System.Threading.Tasks.Task<int> ManyStockAsync(char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CanBeRemoved", ReplyAction="http://tempuri.org/IService/CanBeRemovedResponse")]
        bool CanBeRemoved(char product, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CanBeRemoved", ReplyAction="http://tempuri.org/IService/CanBeRemovedResponse")]
        System.Threading.Tasks.Task<bool> CanBeRemovedAsync(char product, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddStock", ReplyAction="http://tempuri.org/IService/AddStockResponse")]
        bool AddStock(char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddStock", ReplyAction="http://tempuri.org/IService/AddStockResponse")]
        System.Threading.Tasks.Task<bool> AddStockAsync(char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStocks", ReplyAction="http://tempuri.org/IService/GetStocksResponse")]
        int[] GetStocks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStocks", ReplyAction="http://tempuri.org/IService/GetStocksResponse")]
        System.Threading.Tasks.Task<int[]> GetStocksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddStockWithQuantity", ReplyAction="http://tempuri.org/IService/AddStockWithQuantityResponse")]
        bool AddStockWithQuantity(char product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddStockWithQuantity", ReplyAction="http://tempuri.org/IService/AddStockWithQuantityResponse")]
        System.Threading.Tasks.Task<bool> AddStockWithQuantityAsync(char product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveStockUnit", ReplyAction="http://tempuri.org/IService/RemoveStockUnitResponse")]
        bool RemoveStockUnit(char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveStockUnit", ReplyAction="http://tempuri.org/IService/RemoveStockUnitResponse")]
        System.Threading.Tasks.Task<bool> RemoveStockUnitAsync(char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddStockUnit", ReplyAction="http://tempuri.org/IService/AddStockUnitResponse")]
        void AddStockUnit(char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddStockUnit", ReplyAction="http://tempuri.org/IService/AddStockUnitResponse")]
        System.Threading.Tasks.Task AddStockUnitAsync(char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ManyStockOfWarehouse", ReplyAction="http://tempuri.org/IService/ManyStockOfWarehouseResponse")]
        System.Tuple<char, int>[] ManyStockOfWarehouse(string warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ManyStockOfWarehouse", ReplyAction="http://tempuri.org/IService/ManyStockOfWarehouseResponse")]
        System.Threading.Tasks.Task<System.Tuple<char, int>[]> ManyStockOfWarehouseAsync(string warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CanBenRemovedMaster", ReplyAction="http://tempuri.org/IService/CanBenRemovedMasterResponse")]
        bool CanBenRemovedMaster(string warehouse, char product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CanBenRemovedMaster", ReplyAction="http://tempuri.org/IService/CanBenRemovedMasterResponse")]
        System.Threading.Tasks.Task<bool> CanBenRemovedMasterAsync(string warehouse, char product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveStockMaster", ReplyAction="http://tempuri.org/IService/RemoveStockMasterResponse")]
        bool RemoveStockMaster(string warehouse, char product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveStockMaster", ReplyAction="http://tempuri.org/IService/RemoveStockMasterResponse")]
        System.Threading.Tasks.Task<bool> RemoveStockMasterAsync(string warehouse, char product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddStockMaster", ReplyAction="http://tempuri.org/IService/AddStockMasterResponse")]
        bool AddStockMaster(string warehouse, char product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddStockMaster", ReplyAction="http://tempuri.org/IService/AddStockMasterResponse")]
        System.Threading.Tasks.Task<bool> AddStockMasterAsync(string warehouse, char product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ManyStockOfWarehouseProduct", ReplyAction="http://tempuri.org/IService/ManyStockOfWarehouseProductResponse")]
        int ManyStockOfWarehouseProduct(string warehouse, char product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ManyStockOfWarehouseProduct", ReplyAction="http://tempuri.org/IService/ManyStockOfWarehouseProductResponse")]
        System.Threading.Tasks.Task<int> ManyStockOfWarehouseProductAsync(string warehouse, char product);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MetalBandBakery.Infra.Inventory.WCF.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MetalBandBakery.Infra.Inventory.WCF.IService>, MetalBandBakery.Infra.Inventory.WCF.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckStock(char product) {
            return base.Channel.CheckStock(product);
        }
        
        public System.Threading.Tasks.Task<bool> CheckStockAsync(char product) {
            return base.Channel.CheckStockAsync(product);
        }
        
        public bool RemoveStock(char product, int amount) {
            return base.Channel.RemoveStock(product, amount);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveStockAsync(char product, int amount) {
            return base.Channel.RemoveStockAsync(product, amount);
        }
        
        public int ManyStock(char product) {
            return base.Channel.ManyStock(product);
        }
        
        public System.Threading.Tasks.Task<int> ManyStockAsync(char product) {
            return base.Channel.ManyStockAsync(product);
        }
        
        public bool CanBeRemoved(char product, int amount) {
            return base.Channel.CanBeRemoved(product, amount);
        }
        
        public System.Threading.Tasks.Task<bool> CanBeRemovedAsync(char product, int amount) {
            return base.Channel.CanBeRemovedAsync(product, amount);
        }
        
        public bool AddStock(char product) {
            return base.Channel.AddStock(product);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockAsync(char product) {
            return base.Channel.AddStockAsync(product);
        }
        
        public int[] GetStocks() {
            return base.Channel.GetStocks();
        }
        
        public System.Threading.Tasks.Task<int[]> GetStocksAsync() {
            return base.Channel.GetStocksAsync();
        }
        
        public bool AddStockWithQuantity(char product, int quantity) {
            return base.Channel.AddStockWithQuantity(product, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockWithQuantityAsync(char product, int quantity) {
            return base.Channel.AddStockWithQuantityAsync(product, quantity);
        }
        
        public bool RemoveStockUnit(char product) {
            return base.Channel.RemoveStockUnit(product);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveStockUnitAsync(char product) {
            return base.Channel.RemoveStockUnitAsync(product);
        }
        
        public void AddStockUnit(char product) {
            base.Channel.AddStockUnit(product);
        }
        
        public System.Threading.Tasks.Task AddStockUnitAsync(char product) {
            return base.Channel.AddStockUnitAsync(product);
        }
        
        public System.Tuple<char, int>[] ManyStockOfWarehouse(string warehouse) {
            return base.Channel.ManyStockOfWarehouse(warehouse);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<char, int>[]> ManyStockOfWarehouseAsync(string warehouse) {
            return base.Channel.ManyStockOfWarehouseAsync(warehouse);
        }
        
        public bool CanBenRemovedMaster(string warehouse, char product, int quantity) {
            return base.Channel.CanBenRemovedMaster(warehouse, product, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> CanBenRemovedMasterAsync(string warehouse, char product, int quantity) {
            return base.Channel.CanBenRemovedMasterAsync(warehouse, product, quantity);
        }
        
        public bool RemoveStockMaster(string warehouse, char product, int quantity) {
            return base.Channel.RemoveStockMaster(warehouse, product, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveStockMasterAsync(string warehouse, char product, int quantity) {
            return base.Channel.RemoveStockMasterAsync(warehouse, product, quantity);
        }
        
        public bool AddStockMaster(string warehouse, char product, int quantity) {
            return base.Channel.AddStockMaster(warehouse, product, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockMasterAsync(string warehouse, char product, int quantity) {
            return base.Channel.AddStockMasterAsync(warehouse, product, quantity);
        }
        
        public int ManyStockOfWarehouseProduct(string warehouse, char product) {
            return base.Channel.ManyStockOfWarehouseProduct(warehouse, product);
        }
        
        public System.Threading.Tasks.Task<int> ManyStockOfWarehouseProductAsync(string warehouse, char product) {
            return base.Channel.ManyStockOfWarehouseProductAsync(warehouse, product);
        }
    }
}
